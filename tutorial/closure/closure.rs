// 闭包虽然没有函数名，但可以把整个闭包赋值一个变量，通过调用该变量来完成闭包的调用
// 闭包不用声明返回值，但它却可以有返回值。并且使用最后一条语句的执行结果作为返回值。闭包的返回值可以赋值给变量

// |parameter| {
// 闭包的具体逻辑
// }

// ||{
// 闭包的具体逻辑
// }

fn main() {
    let is_even = |x| x % 2 == 0;
    let no = 13;
    println!("{} is even ? {}", no, is_even(no));

    // 闭包还可以访问它所在的外部函数可以访问的所有变量
    let val = 10;
    // 访问外层作用域变量 val
    let closure2 = |x: i32| {
        // 内联函数访问外层作用域变量
        x + val
    };
    println!("{}", closure2(2));
}
