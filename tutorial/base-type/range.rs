// Rust 提供了一个非常简洁的方式，用来生成连续的数值，例如 1..5，生成从 1 到 4 的连续数字，
// 不包含 5 ；1..=5，生成从 1 到 5 的连续数字，包含 5，它的用途很简单，常常用于循环中：

// 序列只允许用于数字或字符类型，原因是：它们可以连续，同时编译器在编译期可以检查该序列是否为空，
// 字符和数字值是 Rust 中仅有的可以用于判断是否为空的类型

fn main() {
    for i in 1..=5 {
        print!("{} ", i);
    }
    println!();

    for i in 'a'..='z' {
        print!("{} ", i);
    }
}
